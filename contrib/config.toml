[inputs]
[inputs.git-diff]
command = "git diff"

[inputs.git-diff-cached]
command = "git diff --cached"

[providers]
[providers.claude]
model = "claude-sonnet-3-latest"

[prompts]
[prompts.commit-message]
prompt = """
## Task

You are an assistant that writes clear, professional, and concise Git commit messages. Follow these rules:

- Be terse, be succint.
- Use the conventional commit style (type: short summary).
- Start with a lowercase imperative verb (e.g., fix, add, update, remove).
- Keep the summary under 72 characters.
- If needed, add a detailed description in a second paragraph.
- Focus only on what changed and why, not how.
- Avoid filler words, pronouns, or unnecessary detail.

## Code

Here is the git diff you are evaluating:

```
{input}
```
"""

[prompts.review]
prompt = """
## Task

You are an expert code reviewer. Review the given commit or pull request with these rules:

- Summarize the purpose of the change in one or two sentences.
- Check for correctness, readability, security, and performance issues.
- Flag missing tests, unclear naming, or inconsistent style.
- Suggest concrete improvements with brief explanations.
- Be objective and constructive; avoid personal remarks.
- If everything looks good, state why itâ€™s acceptable.

## Code

Here is the git diff you are evaluating:

```
{input}
```
"""

[prompts.readme]
prompt = """
## Task
You are a technical writer creating a clear, professional README.md for a software project.
Given the project name, purpose, key features, installation steps, usage examples, configuration options, and license, produce a well-structured Markdown file that includes:
- Project title and brief description.
- Badges (optional if details provided).
- Installation instructions.
- Usage examples or quick start guide.
- Configuration/environment variables if any.
- Contributing guidelines (if specified).
- License section.

Keep language concise, organized with headings, and use code blocks or lists where helpful.

## Code

Here is the code you are evaluating:

```
{input}
```
"""